{
    "dataset": "feynman_test_20",
    "algorithm": "RILSROLSRegressor",
    "params": {
        "complexity_penalty": 0.001,
        "error_tolerance": 1e-16,
        "max_fit_calls": 1000000,
        "max_seconds": 7200,
        "random_state": 15795
    },
    "random_state": 15795,
    "process_time": 3974.484375,
    "time_time": 3974.5815246105194,
    "target_noise": 0.0,
    "feature_noise": 0.0,
    "true_model": "0.08*alpha**2*h**2*omega_0**2*(omega/omega_0 - sin(beta)**2 + omega_0/omega)/(c**2*m**2*omega**2)",
    "model_size": 122,
    "symbolic_model": "-7.07679433*2**x3*log(x2)**2/(x0**2*x4**2*x5**2) - 3.06927062*x1*x2**2*x3**2*sin(x5**(-2))/(x4**2*(x0 + 1)**2) + 5.2074951*x2**2*x3**2/(x4**2*x5**2*(x0 + 1)**2) + 0.42810137*x1**2*x2**2*x3**2/(x0**2*x4**2*x5**2) + 2.15724902*log(x2)**2*cos(2*x2 + x6)/(x0**2*x4**2)",
    "mse_train": 2.447620538460747,
    "mae_train": 0.34683733188978383,
    "r2_train": 0.9635331949585693,
    "mse_test": 4.721079124597081,
    "mae_test": 0.38215808232008264,
    "r2_test": 0.9627800021495495,
    "simplified_symbolic_model": "(-3.07*alpha**2*c**2*h**2*omega**2*omega_0*sin(c**(-2)) + 5.21*alpha**2*h**2*omega**2 + 2.16*c**2*(omega + 1)**2*log(alpha)**2*cos(2*alpha + beta) + (omega + 1)**2*(-7.08*2**h*log(alpha)**2 + 0.428*alpha**2*h**2*omega_0**2))/(c**2*m**2*omega**2*(omega + 1)**2)",
    "simplified_complexity": 93,
    "symbolic_error": "(0.08*alpha**2*h**2*omega_0*(omega + 1)**2*(omega**2 - omega*omega_0*sin(beta)**2 + omega_0**2) + omega*(3.07*alpha**2*c**2*h**2*omega**2*omega_0*sin(c**(-2)) - 5.21*alpha**2*h**2*omega**2 - 2.16*c**2*(omega + 1)**2*log(alpha)**2*cos(2*alpha + beta) + (omega + 1)**2*(7.08*2**h*log(alpha)**2 - 0.428*alpha**2*h**2*omega_0**2)))/(c**2*m**2*omega**3*(omega + 1)**2)",
    "symbolic_fraction": "12.5*(-3.07*alpha**2*c**2*h**2*omega**2*omega_0*sin(c**(-2)) + 5.21*alpha**2*h**2*omega**2 + 2.16*c**2*(omega + 1)**2*log(alpha)**2*cos(2*alpha + beta) + (omega + 1)**2*(-7.08*2**h*log(alpha)**2 + 0.428*alpha**2*h**2*omega_0**2))/(alpha**2*h**2*omega_0**2*(omega + 1)**2*(omega/omega_0 - sin(beta)**2 + omega_0/omega))",
    "symbolic_error_is_zero": false,
    "symbolic_error_is_constant": false,
    "symbolic_fraction_is_constant": false
}